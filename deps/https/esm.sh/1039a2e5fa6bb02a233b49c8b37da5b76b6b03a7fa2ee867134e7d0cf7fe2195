/* esm.sh - esbuild bundle(ml-pca@4.1.1) deno production */
import{Matrix as n,MatrixTransposeView as w,EVD as p,SVD as S,NIPALS as g}from"/v120/ml-matrix@6.10.4/deno/ml-matrix.mjs";var c=class{constructor(e,s={},i){if(this.U=null,this.S=null,i){this.center=i.center,this.scale=i.scale,this.means=i.means,this.stdevs=i.stdevs,this.U=n.checkMatrix(i.U),this.S=i.S,this.R=i.R,this.excludedFeatures=i.excludedFeatures||[];return}let t;Array.isArray(e)?t=new n(e):t=new n(e);let{isCovarianceMatrix:r=!1,method:a="SVD",nCompNIPALS:l=2,center:m=!0,scale:d=!1,ignoreZeroVariance:f=!1}=s;if(this.center=m,this.scale=d,this.means=null,this.stdevs=null,this.excludedFeatures=[],r){this._computeFromCovarianceMatrix(t);return}switch(this._adjust(t,f),a){case"covarianceMatrix":{let o=new w(t).mmul(t).div(t.rows-1);this._computeFromCovarianceMatrix(o);break}case"NIPALS":{this._computeWithNIPALS(t,l);break}case"SVD":{let o=new S(t,{computeLeftSingularVectors:!1,computeRightSingularVectors:!0,autoTranspose:!0});this.U=o.rightSingularVectors;let v=o.diagonal,h=[];for(let u of v)h.push(u*u/(t.rows-1));this.S=h;break}default:throw new Error(`unknown method: ${a}`)}}static load(e){if(typeof e.name!="string")throw new TypeError("model must have a name property");if(e.name!=="PCA")throw new RangeError(`invalid model: ${e.name}`);return new c(void 0,void 0,e)}predict(e,s={}){let{nComponents:i=this.U.columns}=s,t;if(Array.isArray(e)?t=new n(e):t=new n(e),this.center&&(t.subRowVector(this.means),this.scale)){for(let a of this.excludedFeatures)t.removeColumn(a);t.divRowVector(this.stdevs)}let r=t.mmul(this.U);return r.subMatrix(0,r.rows-1,0,i-1)}invert(e){e=n.checkMatrix(e);let s=e.mmul(this.U.transpose());return this.center&&(this.scale&&s.mulRowVector(this.stdevs),s.addRowVector(this.means)),s}getExplainedVariance(){let e=0;if(this.S)for(let s of this.S)e+=s;return this.S?this.S.map(s=>s/e):[]}getCumulativeVariance(){let e=this.getExplainedVariance();for(let s=1;s<e.length;s++)e[s]+=e[s-1];return e}getEigenvectors(){return this.U}getEigenvalues(){return this.S}getStandardDeviations(){return this.S.map(e=>Math.sqrt(e))}getLoadings(){return this.U.transpose()}toJSON(){return{name:"PCA",center:this.center,scale:this.scale,means:this.means,stdevs:this.stdevs,U:this.U,S:this.S,excludedFeatures:this.excludedFeatures}}_adjust(e,s){if(this.center){let i=e.mean("column"),t=this.scale?e.standardDeviation("column",{mean:i}):null;if(this.means=i,e.subRowVector(i),this.scale){for(let r=0;r<t.length;r++)if(t[r]===0)if(s)e.removeColumn(r),t.splice(r,1),this.excludedFeatures.push(r),r--;else throw new RangeError(`Cannot scale the dataset (standard deviation is zero at index ${r}`);this.stdevs=t,e.divRowVector(t)}}}_computeFromCovarianceMatrix(e){let s=new p(e,{assumeSymmetric:!0});this.U=s.eigenvectorMatrix,this.U.flipRows(),this.S=s.realEigenvalues,this.S.reverse()}_computeWithNIPALS(e,s){this.U=new n(s,e.columns),this.S=[];let i=e;for(let t=0;t<s;t++){let r=new g(i);this.U.setRow(t,r.w.transpose()),this.S.push(Math.pow(r.s.get(0,0),2)),i=r.xResidual}this.U=this.U.transpose()}};export{c as PCA};
//# sourceMappingURL=ml-pca.mjs.map