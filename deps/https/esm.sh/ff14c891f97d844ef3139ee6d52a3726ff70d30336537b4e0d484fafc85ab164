/* esm.sh - esbuild bundle(chromadb@1.4.1) deno production */
import * as _2$ from "/v120/cohere-ai@6.2.0/deno/cohere-ai.mjs";const __2$ = _2$.default??_2$;import * as _3$ from "/v120/openai@3.2.1/deno/openai.mjs";const __3$ = _3$.default??_3$;var T=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});import m from"/v120/axios@0.26.1/deno/axios.mjs";import q from"/v120/axios@0.26.1/deno/axios.mjs";var d="http://localhost".replace(/\/+$/,"");var P=class{constructor(e,t=d,a=q){this.basePath=t,this.axios=a,e&&(this.configuration=e,this.basePath=e.basePath||this.basePath)}},C=class extends Error{constructor(e,t){super(t),this.field=e,this.name="RequiredError"}};var h="https://example.com",p=function(r,e,t){if(t==null)throw new C(e,`Required parameter ${e} was null or undefined when calling ${r}.`)};var u=function(r,...e){let t=new URLSearchParams(r.search);for(let a of e)for(let s in a)if(Array.isArray(a[s])){t.delete(s);for(let n of a[s])t.append(s,n)}else t.set(s,a[s]);r.search=t.toString()},V=function(r,e,t){let a=typeof r!="string";return(a&&t&&t.isJsonMime?t.isJsonMime(e.headers["Content-Type"]):a)?JSON.stringify(r!==void 0?r:{}):r||""},b=function(r){return r.pathname+r.search+r.hash},O=function(r,e,t,a){return(s=e,n=t)=>{let o=Object.assign(Object.assign({},r.options),{url:(a?.basePath||n)+r.url});return s.request(o)}};var v=function(r){return{_delete:async(e,t,a={})=>{p("_delete","collectionName",e),p("_delete","deleteEmbedding",t);let s="/api/v1/collections/{collection_name}/delete".replace("{collection_name}",encodeURIComponent(String(e))),n=new URL(s,h),o;r&&(o=r.baseOptions);let c=Object.assign(Object.assign({method:"POST"},o),a),i={},l={};i["Content-Type"]="application/json",u(n,l);let y=o&&o.headers?o.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},i),y),a.headers),c.data=V(t,c,r),{url:b(n),options:c}},add:async(e,t,a={})=>{p("add","collectionName",e),p("add","addEmbedding",t);let s="/api/v1/collections/{collection_name}/add".replace("{collection_name}",encodeURIComponent(String(e))),n=new URL(s,h),o;r&&(o=r.baseOptions);let c=Object.assign(Object.assign({method:"POST"},o),a),i={},l={};i["Content-Type"]="application/json",u(n,l);let y=o&&o.headers?o.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},i),y),a.headers),c.data=V(t,c,r),{url:b(n),options:c}},count:async(e,t={})=>{p("count","collectionName",e);let a="/api/v1/collections/{collection_name}/count".replace("{collection_name}",encodeURIComponent(String(e))),s=new URL(a,h),n;r&&(n=r.baseOptions);let o=Object.assign(Object.assign({method:"GET"},n),t),c={};u(s,{});let l=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers),{url:b(s),options:o}},createCollection:async(e,t={})=>{p("createCollection","createCollection",e);let a="/api/v1/collections",s=new URL(a,h),n;r&&(n=r.baseOptions);let o=Object.assign(Object.assign({method:"POST"},n),t),c={},i={};c["Content-Type"]="application/json",u(s,i);let l=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers),o.data=V(e,o,r),{url:b(s),options:o}},createIndex:async(e,t={})=>{p("createIndex","collectionName",e);let a="/api/v1/collections/{collection_name}/create_index".replace("{collection_name}",encodeURIComponent(String(e))),s=new URL(a,h),n;r&&(n=r.baseOptions);let o=Object.assign(Object.assign({method:"POST"},n),t),c={};u(s,{});let l=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers),{url:b(s),options:o}},deleteCollection:async(e,t={})=>{p("deleteCollection","collectionName",e);let a="/api/v1/collections/{collection_name}".replace("{collection_name}",encodeURIComponent(String(e))),s=new URL(a,h),n;r&&(n=r.baseOptions);let o=Object.assign(Object.assign({method:"DELETE"},n),t),c={};u(s,{});let l=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers),{url:b(s),options:o}},get:async(e,t,a={})=>{p("get","collectionName",e),p("get","getEmbedding",t);let s="/api/v1/collections/{collection_name}/get".replace("{collection_name}",encodeURIComponent(String(e))),n=new URL(s,h),o;r&&(o=r.baseOptions);let c=Object.assign(Object.assign({method:"POST"},o),a),i={},l={};i["Content-Type"]="application/json",u(n,l);let y=o&&o.headers?o.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},i),y),a.headers),c.data=V(t,c,r),{url:b(n),options:c}},getCollection:async(e,t={})=>{p("getCollection","collectionName",e);let a="/api/v1/collections/{collection_name}".replace("{collection_name}",encodeURIComponent(String(e))),s=new URL(a,h),n;r&&(n=r.baseOptions);let o=Object.assign(Object.assign({method:"GET"},n),t),c={};u(s,{});let l=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers),{url:b(s),options:o}},getNearestNeighbors:async(e,t,a={})=>{p("getNearestNeighbors","collectionName",e),p("getNearestNeighbors","queryEmbedding",t);let s="/api/v1/collections/{collection_name}/query".replace("{collection_name}",encodeURIComponent(String(e))),n=new URL(s,h),o;r&&(o=r.baseOptions);let c=Object.assign(Object.assign({method:"POST"},o),a),i={},l={};i["Content-Type"]="application/json",u(n,l);let y=o&&o.headers?o.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},i),y),a.headers),c.data=V(t,c,r),{url:b(n),options:c}},heartbeat:async(e={})=>{let t="/api/v1/heartbeat",a=new URL(t,h),s;r&&(s=r.baseOptions);let n=Object.assign(Object.assign({method:"GET"},s),e),o={};u(a,{});let i=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),i),e.headers),{url:b(a),options:n}},listCollections:async(e={})=>{let t="/api/v1/collections",a=new URL(t,h),s;r&&(s=r.baseOptions);let n=Object.assign(Object.assign({method:"GET"},s),e),o={};u(a,{});let i=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),i),e.headers),{url:b(a),options:n}},persist:async(e={})=>{let t="/api/v1/persist",a=new URL(t,h),s;r&&(s=r.baseOptions);let n=Object.assign(Object.assign({method:"POST"},s),e),o={};u(a,{});let i=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),i),e.headers),{url:b(a),options:n}},rawSql:async(e,t={})=>{p("rawSql","rawSql",e);let a="/api/v1/raw_sql",s=new URL(a,h),n;r&&(n=r.baseOptions);let o=Object.assign(Object.assign({method:"POST"},n),t),c={},i={};c["Content-Type"]="application/json",u(s,i);let l=n&&n.headers?n.headers:{};return o.headers=Object.assign(Object.assign(Object.assign({},c),l),t.headers),o.data=V(e,o,r),{url:b(s),options:o}},reset:async(e={})=>{let t="/api/v1/reset",a=new URL(t,h),s;r&&(s=r.baseOptions);let n=Object.assign(Object.assign({method:"POST"},s),e),o={};u(a,{});let i=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),i),e.headers),{url:b(a),options:n}},root:async(e={})=>{let t="/api/v1",a=new URL(t,h),s;r&&(s=r.baseOptions);let n=Object.assign(Object.assign({method:"GET"},s),e),o={};u(a,{});let i=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),i),e.headers),{url:b(a),options:n}},update:async(e,t,a={})=>{p("update","collectionName",e),p("update","updateEmbedding",t);let s="/api/v1/collections/{collection_name}/update".replace("{collection_name}",encodeURIComponent(String(e))),n=new URL(s,h),o;r&&(o=r.baseOptions);let c=Object.assign(Object.assign({method:"POST"},o),a),i={},l={};i["Content-Type"]="application/json",u(n,l);let y=o&&o.headers?o.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},i),y),a.headers),c.data=V(t,c,r),{url:b(n),options:c}},updateCollection:async(e,t,a={})=>{p("updateCollection","collectionName",e),p("updateCollection","updateCollection",t);let s="/api/v1/collections/{collection_name}".replace("{collection_name}",encodeURIComponent(String(e))),n=new URL(s,h),o;r&&(o=r.baseOptions);let c=Object.assign(Object.assign({method:"PUT"},o),a),i={},l={};i["Content-Type"]="application/json",u(n,l);let y=o&&o.headers?o.headers:{};return c.headers=Object.assign(Object.assign(Object.assign({},i),y),a.headers),c.data=V(t,c,r),{url:b(n),options:c}},version:async(e={})=>{let t="/api/v1/version",a=new URL(t,h),s;r&&(s=r.baseOptions);let n=Object.assign(Object.assign({method:"GET"},s),e),o={};u(a,{});let i=s&&s.headers?s.headers:{};return n.headers=Object.assign(Object.assign(Object.assign({},o),i),e.headers),{url:b(a),options:n}}}},g=function(r){let e=v(r);return{async _delete(t,a,s){let n=await e._delete(t,a,s);return O(n,m,d,r)},async add(t,a,s){let n=await e.add(t,a,s);return O(n,m,d,r)},async count(t,a){let s=await e.count(t,a);return O(s,m,d,r)},async createCollection(t,a){let s=await e.createCollection(t,a);return O(s,m,d,r)},async createIndex(t,a){let s=await e.createIndex(t,a);return O(s,m,d,r)},async deleteCollection(t,a){let s=await e.deleteCollection(t,a);return O(s,m,d,r)},async get(t,a,s){let n=await e.get(t,a,s);return O(n,m,d,r)},async getCollection(t,a){let s=await e.getCollection(t,a);return O(s,m,d,r)},async getNearestNeighbors(t,a,s){let n=await e.getNearestNeighbors(t,a,s);return O(n,m,d,r)},async heartbeat(t){let a=await e.heartbeat(t);return O(a,m,d,r)},async listCollections(t){let a=await e.listCollections(t);return O(a,m,d,r)},async persist(t){let a=await e.persist(t);return O(a,m,d,r)},async rawSql(t,a){let s=await e.rawSql(t,a);return O(s,m,d,r)},async reset(t){let a=await e.reset(t);return O(a,m,d,r)},async root(t){let a=await e.root(t);return O(a,m,d,r)},async update(t,a,s){let n=await e.update(t,a,s);return O(n,m,d,r)},async updateCollection(t,a,s){let n=await e.updateCollection(t,a,s);return O(n,m,d,r)},async version(t){let a=await e.version(t);return O(a,m,d,r)}}};var A=class extends P{_delete(e,t){return g(this.configuration)._delete(e.collectionName,e.deleteEmbedding,t).then(a=>a(this.axios,this.basePath))}add(e,t){return g(this.configuration).add(e.collectionName,e.addEmbedding,t).then(a=>a(this.axios,this.basePath))}count(e,t){return g(this.configuration).count(e.collectionName,t).then(a=>a(this.axios,this.basePath))}createCollection(e,t){return g(this.configuration).createCollection(e.createCollection,t).then(a=>a(this.axios,this.basePath))}createIndex(e,t){return g(this.configuration).createIndex(e.collectionName,t).then(a=>a(this.axios,this.basePath))}deleteCollection(e,t){return g(this.configuration).deleteCollection(e.collectionName,t).then(a=>a(this.axios,this.basePath))}get(e,t){return g(this.configuration).get(e.collectionName,e.getEmbedding,t).then(a=>a(this.axios,this.basePath))}getCollection(e,t){return g(this.configuration).getCollection(e.collectionName,t).then(a=>a(this.axios,this.basePath))}getNearestNeighbors(e,t){return g(this.configuration).getNearestNeighbors(e.collectionName,e.queryEmbedding,t).then(a=>a(this.axios,this.basePath))}heartbeat(e){return g(this.configuration).heartbeat(e).then(t=>t(this.axios,this.basePath))}listCollections(e){return g(this.configuration).listCollections(e).then(t=>t(this.axios,this.basePath))}persist(e){return g(this.configuration).persist(e).then(t=>t(this.axios,this.basePath))}rawSql(e,t){return g(this.configuration).rawSql(e.rawSql,t).then(a=>a(this.axios,this.basePath))}reset(e){return g(this.configuration).reset(e).then(t=>t(this.axios,this.basePath))}root(e){return g(this.configuration).root(e).then(t=>t(this.axios,this.basePath))}update(e,t){return g(this.configuration).update(e.collectionName,e.updateEmbedding,t).then(a=>a(this.axios,this.basePath))}updateCollection(e,t){return g(this.configuration).updateCollection(e.collectionName,e.updateCollection,t).then(a=>a(this.axios,this.basePath))}version(e){return g(this.configuration).version(e).then(t=>t(this.axios,this.basePath))}};var x=class{constructor(e={}){this.apiKey=e.apiKey,this.username=e.username,this.password=e.password,this.accessToken=e.accessToken,this.basePath=e.basePath,this.baseOptions=e.baseOptions,this.formDataCtor=e.formDataCtor}isJsonMime(e){let t=new RegExp("^(application/json|[^;/ 	]+/[^;/ 	]+[+]json)[ 	]*(;.*)?$","i");return e!==null&&(t.test(e)||e.toLowerCase()==="application/json-patch+json")}};function j(r){return Array.isArray(r)?r:[r]}function R(r){return Array.isArray(r[0])?r:[r]}var U,S=class{constructor(e,t,a){try{U=__3$}catch{throw new Error("Please install the openai package to use the OpenAIEmbeddingFunction, `npm install -S openai`")}this.api_key=e,this.org_id=a||"",this.model=t||"text-embedding-ada-002"}async generate(e){let t=new U.Configuration({organization:this.org_id,apiKey:this.api_key}),a=new U.OpenAIApi(t),s=[],o=(await a.createEmbedding({model:"text-embedding-ada-002",input:e})).data.data;for(let c=0;c<o.length;c+=1)s.push(o[c].embedding);return s}},_,E=class{constructor(e){try{_=__2$}catch{throw new Error("Please install the cohere-ai package to use the CohereEmbeddingFunction, `npm install -S cohere-ai`")}this.api_key=e}async generate(e){let t=_.init(this.api_key),a=[];return(await _.embed({texts:e})).body.embeddings}},f=class{constructor(e,t,a){this.name=e,this.api=t,a!==void 0&&(this.embeddingFunction=a)}async add(e,t,a,s,n=!0){if(t===void 0&&s===void 0)throw new Error("embeddings and documents cannot both be undefined");if(t===void 0&&s!==void 0){let w=j(s);if(this.embeddingFunction!==void 0)t=await this.embeddingFunction.generate(w);else throw new Error("embeddingFunction is undefined. Please configure an embedding function")}if(t===void 0)throw new Error("embeddings is undefined but shouldnt be");let o=j(e),c=R(t),i;a===void 0?i=void 0:i=j(a);let l;if(s===void 0?l=void 0:l=j(s),c!==void 0&&o.length!==c.length||i!==void 0&&o.length!==i.length||l!==void 0&&o.length!==l.length)throw new Error("ids, embeddings, metadatas, and documents must all be the same length");return await this.api.add({collectionName:this.name,addEmbedding:{ids:o,embeddings:c,documents:l,metadatas:i,increment_index:n}}).then(function(w){return w.data}).catch(function({response:w}){return w.data})}async count(){return(await this.api.count({collectionName:this.name})).data}async get(e,t,a,s,n,o){let c;e!==void 0&&(c=j(e));var i=await this.api.get({collectionName:this.name,getEmbedding:{ids:c,where:t,limit:a,offset:s,include:n,where_document:o}}).then(function(l){return l.data}).catch(function({response:l}){return l.data});return i}async update(e,t,a,s){if(t===void 0&&s===void 0&&a===void 0)throw new Error("embeddings, documents, and metadatas cannot all be undefined");if(t===void 0&&s!==void 0){let o=j(s);if(this.embeddingFunction!==void 0)t=await this.embeddingFunction.generate(o);else throw new Error("embeddingFunction is undefined. Please configure an embedding function")}var n=await this.api.update({collectionName:this.name,updateEmbedding:{ids:j(e),embeddings:t?R(t):void 0,documents:j(s),metadatas:j(a)}}).then(function(o){return o.data}).catch(function({response:o}){return o.data});return n}async query(e,t=10,a,s,n,o){if(e===void 0&&s===void 0)throw new Error("query_embeddings and query_text cannot both be undefined");if(e===void 0&&s!==void 0){let l=j(s);if(this.embeddingFunction!==void 0)e=await this.embeddingFunction.generate(l);else throw new Error("embeddingFunction is undefined. Please configure an embedding function")}if(e===void 0)throw new Error("embeddings is undefined but shouldnt be");let c=R(e);return await this.api.getNearestNeighbors({collectionName:this.name,queryEmbedding:{query_embeddings:c,where:a,n_results:t,where_document:n,include:o}}).then(function(l){return l.data}).catch(function({response:l}){return l.data})}async peek(e=10){return(await this.api.get({collectionName:this.name,getEmbedding:{limit:e}})).data}async createIndex(){return await this.api.createIndex({collectionName:this.name})}async delete(e,t){var a=await this.api._delete({collectionName:this.name,deleteEmbedding:{ids:e,where:t}}).then(function(s){return s.data}).catch(function({response:s}){return s.data});return a}},N=class{constructor(e){e===void 0&&(e="http://localhost:8000");let t=new x({basePath:e});this.api=new A(t)}async reset(){return await this.api.reset()}async version(){return(await this.api.version()).data}async heartbeat(){return(await this.api.heartbeat()).data["nanosecond heartbeat"]}async createCollection(e,t,a){let s=await this.api.createCollection({createCollection:{name:e,metadata:t}}).then(function(n){return n.data}).catch(function({response:n}){return n.data});if(s.error)throw new Error(s.error);return new f(e,this.api,a)}async getOrCreateCollection(e,t,a){let s=await this.api.createCollection({createCollection:{name:e,metadata:t,get_or_create:!0}}).then(function(n){return n.data}).catch(function({response:n}){return n.data});if(s.error)throw new Error(s.error);return new f(e,this.api,a)}async listCollections(){return(await this.api.listCollections()).data}async getCollection(e,t){return new f(e,this.api,t)}async deleteCollection(e){return await this.api.deleteCollection({collectionName:e}).then(function(a){return a.data}).catch(function({response:a}){return a.data})}};export{N as ChromaClient,E as CohereEmbeddingFunction,f as Collection,S as OpenAIEmbeddingFunction};
//# sourceMappingURL=chromadb.mjs.map