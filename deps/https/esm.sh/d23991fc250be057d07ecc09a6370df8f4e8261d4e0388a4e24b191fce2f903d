/* esm.sh - esbuild bundle(ml-nearest-vector@2.0.1) deno production */
import{squaredEuclidean as d}from"/v120/ml-distance-euclidean@2.0.0/deno/ml-distance-euclidean.mjs";var u={distanceFunction:d};function a(t,o,r=u){let c=r.distanceFunction||u.distanceFunction,f=r.similarityFunction||u.similarityFunction,s=-1;if(typeof f=="function"){let i=Number.MIN_VALUE;for(let n=0;n<t.length;n++){let e=f(o,t[n]);e>i&&(i=e,s=n)}}else if(typeof c=="function"){let i=Number.MAX_VALUE;for(let n=0;n<t.length;n++){let e=c(o,t[n]);e<i&&(i=e,s=n)}}else throw new Error("A similarity or distance function it's required");return s}function m(t,o,r=u){let c=a(t,o,r);return t[c]}export{a as default,m as findNearestVector};
//# sourceMappingURL=ml-nearest-vector.mjs.map