/* esm.sh - esbuild bundle(ml-array-rescale@1.3.7) deno production */
import{isAnyArray as f}from"/v120/is-any-array@2.0.1/deno/is-any-array.mjs";import l from"/v120/ml-array-max@1.2.4/deno/ml-array-max.mjs";import w from"/v120/ml-array-min@1.2.3/deno/ml-array-min.mjs";function y(r){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(f(r)){if(r.length===0)throw new TypeError("input must not be empty")}else throw new TypeError("input must be an array");var e;if(a.output!==void 0){if(!f(a.output))throw new TypeError("output option must be an array if specified");e=a.output}else e=new Array(r.length);var t=w(r),o=l(r);if(t===o)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var i=a.min,m=i===void 0?a.autoMinMax?t:0:i,u=a.max,s=u===void 0?a.autoMinMax?o:1:u;if(m>=s)throw new RangeError("min option must be smaller than max option");for(var p=(s-m)/(o-t),n=0;n<r.length;n++)e[n]=(r[n]-t)*p+m;return e}export{y as default};
//# sourceMappingURL=ml-array-rescale.mjs.map