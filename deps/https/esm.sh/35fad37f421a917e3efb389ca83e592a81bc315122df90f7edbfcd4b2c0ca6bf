/* esm.sh - esbuild bundle(@anthropic-ai/sdk@0.4.3) deno production */
import * as _1$ from "/v119/@fortaine/fetch-event-source@3.0.6/deno/fetch-event-source.mjs";const __1$ = Object.assign({__esModule:!0},_1$);import * as _2$ from "/v119/cross-fetch@3.1.5/deno/cross-fetch.mjs";const __2$ = _2$.default??_2$;var E=Object.create;var h=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var y=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,n)=>(typeof require<"u"?require:e)[n]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var U=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),I=(t,e)=>{for(var n in e)h(t,n,{get:e[n],enumerable:!0})},m=(t,e,n,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of C(e))!N.call(t,s)&&s!==n&&h(t,s,{get:()=>e[s],enumerable:!(o=S(e,s))||o.enumerable});return t},u=(t,e,n)=>(m(t,e,"default"),n&&m(n,e,"default")),O=(t,e,n)=>(n=t!=null?E(w(t)):{},m(e||!t||!t.__esModule?h(n,"default",{value:t,enumerable:!0}):n,t));var b=U(a=>{"use strict";var A=a&&a.__awaiter||function(t,e,n,o){function s(r){return r instanceof n?r:new n(function(p){p(r)})}return new(n||(n=Promise))(function(r,p){function f(c){try{d(o.next(c))}catch(_){p(_)}}function i(c){try{d(o.throw(c))}catch(_){p(_)}}function d(c){c.done?r(c.value):s(c.value).then(f,i)}d((o=o.apply(t,e||[])).next())})},j=a&&a.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(a,"__esModule",{value:!0});a.Client=a.AI_PROMPT=a.HUMAN_PROMPT=void 0;var R=__1$,D=j(__2$);a.HUMAN_PROMPT=`

Human:`;a.AI_PROMPT=`

Assistant:`;var T="anthropic-typescript/0.4.3",$="https://api.anthropic.com",v;(function(t){t.Ping="ping"})(v||(v={}));var x="[DONE]",P=class{constructor(e,n){var o;this.apiKey=e,this.apiUrl=(o=n?.apiUrl)!==null&&o!==void 0?o:$}complete(e,n){return A(this,void 0,void 0,function*(){let o=yield(0,D.default)(`${this.apiUrl}/v1/complete`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Client:T,"X-API-Key":this.apiKey},body:JSON.stringify(Object.assign(Object.assign({},e),{stream:!1})),signal:n?.signal});if(!o.ok){let r=new Error(`Sampling error: ${o.status} ${o.statusText}`);throw console.error(r),r}return yield o.json()})}completeStream(e,{onOpen:n,onUpdate:o,signal:s}){let r=new AbortController;return new Promise((p,f)=>{s?.addEventListener("abort",i=>{r.abort(i),f({name:"AbortError",message:"Caller aborted completeStream"})}),(0,R.fetchEventSource)(`${this.apiUrl}/v1/complete`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Client:T,"X-API-Key":this.apiKey},body:JSON.stringify(Object.assign(Object.assign({},e),{stream:!0})),signal:r.signal,onopen:i=>A(this,void 0,void 0,function*(){if(!i.ok)return r.abort(),f(Error(`Failed to open sampling stream, HTTP status code ${i.status}: ${i.statusText}`));n&&(yield Promise.resolve(n(i)))}),onmessage:i=>{if(i.event===v.Ping)return;if(i.data===x){console.error("Unexpected done message before stop_reason has been issued");return}let d=JSON.parse(i.data);if(o&&Promise.resolve(o(d)).catch(c=>{r.abort(),f(c)}),d.stop_reason!==null)return r.abort(),p(d)},onerror:i=>(console.error("Sampling error:",i),r.abort(),f(i))})})}};a.Client=P});var l={};I(l,{AI_PROMPT:()=>L,Client:()=>K,HUMAN_PROMPT:()=>J,__esModule:()=>H,default:()=>q});var M=O(b());u(l,O(b()));var H=!0,{Client:K,AI_PROMPT:L,HUMAN_PROMPT:J}=M,{default:g,...k}=M,q=g!==void 0?g:k;export{L as AI_PROMPT,K as Client,J as HUMAN_PROMPT,H as __esModule,q as default};
//# sourceMappingURL=sdk.mjs.map