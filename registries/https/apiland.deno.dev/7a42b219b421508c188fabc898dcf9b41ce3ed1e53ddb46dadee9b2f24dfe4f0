{"kind":"markdown","value":"Provides a polyfill for Deno CLI and Deploy for\n[`XMLHttpRequest`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)\n(_XHR_).\n\nWhen loaded, it will inject `XMLHttpRequest` into the global namespace along\nwith a couple other key objects.\n\nWhile the module exports `XMLHttpRequest`, most use cases it should just be\nimported _before_ any other dependencies that require XHR to be present:\n\n```ts\nimport \"https://deno.land/x/xhr/mod.ts\";\nimport * as lib from \"https://other/dependency/that/needs/xhr/lib.js\";\n```\n\nThis polyfill has several known/intentional limitations from a browser\nstandard `XMLHttpRequest`:\n\n- It does not handle XML, though the name implies it, nor does it handle HTML\n  being treated as a response type `\"document\"`. This uses the browser's\n  built in parser to parse the XML and HTML into a DOM object.\n- Sync is not supported (passing `false` to the `async` argument). Most\n  browsers have deprecated it in the main thread. Since this polyfill works\n  by calling Deno's `fetch()` it is nearly impossible to generate a sync\n  version, plus it is a really bad idea to block a thread while waiting for a\n  server response. **Don't do it, don't use software that requires it.**\n\n\n---\n\n[doc](https://deno.land/x/xhr@0.3.0/mod.ts) | [source](https://deno.land/x/xhr@0.3.0/mod.ts?source) | [info](https://deno.land/x/xhr@0.3.0/)"}