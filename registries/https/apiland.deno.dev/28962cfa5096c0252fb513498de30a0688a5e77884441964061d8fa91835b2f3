{"kind":"markdown","value":"A middleware framework for handling HTTP with Deno.\n\noak works well on both Deno CLI and Deno deploy, and is inspired by\n[koa](https://koajs.com/). It works well with both the Deno CLI and\n[Deno Deploy](https://deno.com/deploy).\n\n### Example server\n\nA minimal router server which responds with content on `/`. With Deno CLI\nthis will listen on port 8080 and on Deploy, this will simply serve requests\nreceived on the application.\n\n```ts\nimport { Application, Router } from \"https://deno.land/x/oak/mod.ts\";\n\nconst router = new Router();\nrouter.get(\"/\", (ctx) => {\n  ctx.response.body = `<!DOCTYPE html>\n    <html>\n      <head><title>Hello oak!</title><head>\n      <body>\n        <h1>Hello oak!</h1>\n      </body>\n    </html>\n  `;\n});\n\nconst app = new Application();\napp.use(router.routes());\napp.use(router.allowedMethods());\n\napp.listen({ port: 8080 });\n```\n\n\n---\n\n[doc](https://deno.land/x/oak/mod.ts) | [source](https://deno.land/x/oak/mod.ts?source) | [info](https://deno.land/x/oak/)"}